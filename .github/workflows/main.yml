name: CI/CD Pipeline

on:
  push:
    branches:
      - main
    paths:
      - "API/**"
      - "client/**"
      - ".github/workflows/main.yml"
  pull_request:
    branches:
      - main
    paths:
      - "API/**"
      - "client/**"
      - ".github/workflows/main.yml"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.x.x"

      - name: Restore dependencies (Backend)
        working-directory: ./API
        run: dotnet restore ../sistema-gestion-inventario.sln

      - name: Build backend
        working-directory: ./API
        run: dotnet build ../sistema-gestion-inventario.sln --configuration Release --no-restore

      - name: Publish backend
        working-directory: ./API
        run: dotnet publish ../sistema-gestion-inventario.sln --configuration Release --output ${{ github.workspace }}/publish_backend --no-build

      - name: Upload Backend Artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-build
          path: ${{ github.workspace }}/publish_backend

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: "npm"
          cache-dependency-path: ./client/package-lock.json

      - name: Install dependencies (Frontend)
        working-directory: ./client
        run: npm ci

      - name: Build frontend
        working-directory: ./client
        run: npm run build -- --configuration production

      - name: Upload Frontend Artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: ./client/dist/client

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Download Backend Artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-build
          path: ./publish_backend_temp

      - name: Download Frontend Artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: ./dist_frontend_temp

      - name: Deploy to Server via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            bash -c ' 
            echo "Iniciando despliegue en el servidor..."

            DEPLOY_PATH="/var/www"
            BACKEND_PATH="${DEPLOY_PATH}/mi-app/publish"
            BACKEND_OLD_PATH="${DEPLOY_PATH}/mi-app/publish_old"
            FRONTEND_PATH="${DEPLOY_PATH}/mi-app-frontend/browser"
            FRONTEND_OLD_PATH="${DEPLOY_PATH}/mi-app-frontend/browser_old"
            BACKEND_TEMP="./publish_backend_temp/." 
            FRONTEND_TEMP="./dist_frontend_temp/." 

            rollback() {
              echo "Rollback iniciado..."
              if [ -d "$BACKEND_OLD_PATH" ]; then
                sudo rm -rf "$BACKEND_PATH"
                sudo mv "$BACKEND_OLD_PATH" "$BACKEND_PATH"
                echo "Backend restaurado."
              fi
              if [ -d "$FRONTEND_OLD_PATH" ]; then
                sudo rm -rf "$FRONTEND_PATH"
                sudo mv "$FRONTEND_OLD_PATH" "$FRONTEND_PATH"
                echo "Frontend restaurado."
              fi
              sudo systemctl restart kioscomanager.service || true
              sudo systemctl restart nginx || true
              echo "Rollback completado."
            }

            trap rollback ERR

            echo "Desplegando Backend..."
            sudo systemctl stop kioscomanager.service || true
            sudo rm -rf "$BACKEND_OLD_PATH"
            sudo mv "$BACKEND_PATH" "$BACKEND_OLD_PATH" || true
            sudo mkdir -p "$BACKEND_PATH"
            sudo cp -r "$BACKEND_TEMP" "$BACKEND_PATH/"
            sudo chown -R ${{ secrets.SSH_USERNAME }}:${{ secrets.SSH_USERNAME }} "$BACKEND_PATH"
            sudo systemctl start kioscomanager.service
            sleep 5
            if ! sudo systemctl is-active --quiet kioscomanager.service; then
              echo "Error: El servicio Backend no está activo."
              exit 1
            fi
            sudo systemctl status kioscomanager.service --no-pager

            echo "Desplegando Frontend..."
            sudo rm -rf "$FRONTEND_OLD_PATH"
            sudo mv "$FRONTEND_PATH" "$FRONTEND_OLD_PATH" || true
            sudo mkdir -p "$FRONTEND_PATH"
            sudo cp -r "$FRONTEND_TEMP" "$FRONTEND_PATH/"
            sudo chown -R www-data:www-data "$FRONTEND_PATH"
            sudo chmod -R g+w "$FRONTEND_PATH"
            sudo chmod g+s "${DEPLOY_PATH}/mi-app-frontend"
            sudo systemctl restart nginx
            sleep 5
            if ! sudo systemctl is-active --quiet nginx; then
              echo "Error: Nginx no está activo."
              exit 1
            fi
            sudo nginx -t
            echo "Despliegue completado."
            '
