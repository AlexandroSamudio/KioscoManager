name: CI/CD Pipeline

on:
  push:
    branches:
      - main
    paths:
      - 'API/**'
      - 'client/**'
      - '.github/workflows/main.yml'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.x.x'

    - name: Restore dependencies (Backend)
      working-directory: ./API
      run: dotnet restore ../sistema-gestion-inventario.sln

    - name: Build backend
      working-directory: ./API
      run: dotnet build ../sistema-gestion-inventario.sln --configuration Release --no-restore

    - name: Publish backend
      working-directory: ./API
      run: dotnet publish ../sistema-gestion-inventario.sln --configuration Release --output ${{ github.workspace }}/publish_backend --no-build

    - name: Upload Backend Artifact
      uses: actions/upload-artifact@v4
      with:
        name: backend-build
        path: ${{ github.workspace }}/publish_backend

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.14.0'
        cache: 'npm'
        cache-dependency-path: ./client/package-lock.json

    - name: Install dependencies (Frontend)
      working-directory: ./client
      run: npm ci

    - name: Build frontend
      working-directory: ./client
      run: npm run build -- --configuration production

    - name: Upload Frontend Artifact
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: ./client/dist/client

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Download Backend Artifact
      uses: actions/download-artifact@v4
      with:
        name: backend-build
        path: ./publish_backend_temp

    - name: Download Frontend Artifact
      uses: actions/download-artifact@v4
      with:
        name: frontend-build
        path: ./dist_frontend_temp

    - name: Deploy to Server via SSH
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: alex
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          echo "Iniciando despliegue en el servidor..."

          DEPLOY_PATH="/var/www"

          echo "Desplegando Backend..."
          sudo systemctl stop kioscomanager.service || true
          sudo rm -rf ${DEPLOY_PATH}/mi-app/publish_old
          sudo mv ${DEPLOY_PATH}/mi-app/publish ${DEPLOY_PATH}/mi-app/publish_old || true
          sudo mkdir -p ${DEPLOY_PATH}/mi-app/publish
          sudo cp -r /home/runner/work/${{ github.repository }}/${{ github.repository }}/publish_backend_temp/. ${DEPLOY_PATH}/mi-app/publish/
          sudo chown -R alex:alex ${DEPLOY_PATH}/mi-app/publish
          echo "Reiniciando servicio del Backend..."
          sudo systemctl start kioscomanager.service
          sudo systemctl status kioscomanager.service --no-pager

          echo "Desplegando Frontend..."
          sudo rm -rf ${DEPLOY_PATH}/mi-app-frontend/browser_old
          sudo mv ${DEPLOY_PATH}/mi-app-frontend/browser ${DEPLOY_PATH}/mi-app-frontend/browser_old || true
          sudo mkdir -p ${DEPLOY_PATH}/mi-app-frontend/browser
          sudo cp -r /home/runner/work/${{ github.repository }}/${{ github.repository }}/dist_frontend_temp/. ${DEPLOY_PATH}/mi-app-frontend/browser/
          sudo chown -R www-data:www-data ${DEPLOY_PATH}/mi-app-frontend/browser
          sudo chmod -R g+w ${DEPLOY_PATH}/mi-app-frontend/browser
          sudo chmod g+s ${DEPLOY_PATH}/mi-app-frontend
          echo "Reiniciando Nginx..."
          sudo systemctl restart nginx
          sudo nginx -t
          echo "Despliegue completado."